{"version":3,"sources":["component/box.jsx","component/input.jsx","component/player.jsx","component/selectPlayer.jsx","component/restart.jsx","utilFunction/winner.js","utilFunction/draw.js","utilFunction/minMax.js","App.js","index.js"],"names":["Box","board","player","onHandleClick","map","box","boxId","id","disabled","onClick","className","Input","_id","name","value","type","label","htmlFor","Player","onHandleSelectPlayer","onSubmit","SelectPlayer","winner","Restart","draw","onHandleRestart","extraClass","isWinner","i","length","a","b","c","isDraw","filter","MiniMax","cpu","bestMove","bestScore","Infinity","score","MiniMaxUtil","isMaximizing","result","Math","max","min","App","state","nextMove","newBoard","setState","handleClick","index","handleSelectPlayer","e","preventDefault","currentTarget","handleRestart","Array","fill","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.245e577e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Box = ({ board, player, onHandleClick }) => {\r\n  return board.map((box, boxId) => (\r\n    <button\r\n      id ={boxId}\r\n      disabled={board[boxId] || !player}\r\n      onClick={() => onHandleClick(boxId)}\r\n      key={boxId}\r\n      className=\"box\"\r\n    >\r\n      {box}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default Box;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ _id, name, value, type, label }) => {\r\n  return (\r\n    <label htmlFor={_id} className=\"radio\">\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        id={_id}\r\n        value={value}\r\n        className=\"hidden\"\r\n      />\r\n      <span className=\"label\"></span>\r\n      {label}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Input from \"./input\";\r\n\r\nconst Player = ({ onHandleSelectPlayer }) => {\r\n  return (\r\n    <form onSubmit={onHandleSelectPlayer}>\r\n      <Input _id=\"opt1\" name=\"player\" value=\"X\" type=\"radio\" label=\"Player X\" />\r\n      <Input _id=\"opt2\" name=\"player\" value=\"O\" type=\"radio\" label=\"Player O\" />\r\n      <button className=\"btn btn-secondary btn-sm m-2\">Start</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport Player from \"./player\";\r\n\r\nconst SelectPlayer = ({ player, winner, onHandleSelectPlayer }) => {\r\n  return !player ? (\r\n    <Player onHandleSelectPlayer={onHandleSelectPlayer} />\r\n  ) : !winner ? (\r\n    <h4>Player = {player}</h4>\r\n  ) : (\r\n    <h4>Game End</h4>\r\n  );\r\n};\r\n\r\nexport default SelectPlayer;\r\n","import React from \"react\";\r\n\r\nconst Restart = ({ player, winner, draw, onHandleRestart }) => {\r\n  const extraClass = winner || draw ? \" show\" : \"\";\r\n  return (\r\n    <div className={\"winning-message\" + extraClass}>\r\n      <div>\r\n        {draw\r\n          ? \"Draw !!\"\r\n          : player === winner\r\n          ? \"Player Wins !!\"\r\n          : \"Player Loses !!\"}\r\n      </div>\r\n      <button onClick={onHandleRestart} className=\"winning-message-button\">\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restart;\r\n","export function isWinner(board) {\r\n  const winner = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < winner.length; i++) {\r\n    const [a, b, c] = winner[i];\r\n\r\n    if (board[a] && board[a] === board[b] && board[b] === board[c]) {\r\n      return board[a]\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","export function isDraw(board) {\r\n  return board.filter((box) => box === null).length === 0 ? true : false;\r\n}\r\n","// ['X', 'O', 'O', \r\n//  ' ', 'O', ' ', \r\n//  ' ', 'X', 'X']\r\nimport { isDraw } from \"./draw\"\r\nimport { isWinner } from \"./winner\"\r\n\r\nexport function MiniMax(board, player, cpu) {\r\n  let bestScore = -Infinity;\r\n  let bestMove;\r\n\r\n  for (let i = 0; i < board.length; i++) {\r\n    if (!board[i]) {\r\n      board[i] = cpu;\r\n      const score = MiniMaxUtil(board, false, player, cpu);\r\n      board[i] = null;\r\n\r\n      if (score > bestScore) {\r\n        bestScore = score;\r\n        bestMove = i;\r\n      }\r\n    }\r\n  }\r\n  return bestMove\r\n}\r\n\r\nfunction MiniMaxUtil(board, isMaximizing, player, cpu) {\r\n\r\n  const result = isWinner(board);\r\n  if (result) {\r\n    if (result === player) return -1\r\n    else return 1\r\n  }\r\n\r\n  if (isDraw(board)) return 0\r\n\r\n  if (isMaximizing) {\r\n    let bestScore = -Infinity;\r\n    for (let i = 0; i < board.length; i++) {\r\n      if (!board[i]) {\r\n        board[i] = cpu;\r\n        const score = MiniMaxUtil(board, false, player, cpu);\r\n        board[i] = null;\r\n        bestScore = Math.max(bestScore, score);\r\n      }\r\n    }\r\n    return bestScore\r\n  }\r\n  else {\r\n    let bestScore = Infinity;\r\n    for (let i = 0; i < board.length; i++) {\r\n      if (!board[i]) {\r\n        board[i] = player;\r\n        const score = MiniMaxUtil(board, true, player, cpu);\r\n        board[i] = null;\r\n        bestScore = Math.min(bestScore, score);\r\n      }\r\n    }\r\n    return bestScore\r\n  }\r\n}","import React, { Component } from \"react\";\nimport Box from \"./component/box\";\nimport SelectPlayer from \"./component/selectPlayer\";\nimport Restart from \"./component/restart\";\nimport { isWinner } from \"./utilFunction/winner\";\nimport { isDraw } from \"./utilFunction/draw\";\nimport \"./App.css\";\nimport { MiniMax } from \"./utilFunction/minMax\";\n\nclass App extends Component {\n  state = {\n    board: [],\n    player: null,\n    cpu: null,\n    winner: null,\n    draw: false,\n  };\n\n  componentDidMount() {\n    const board = Array(9).fill(null);\n    this.setState({ board });\n  }\n\n  nextMove = (board) => {\n    const { player, cpu } = this.state;\n    let draw = false;\n\n    const newBoard = [...board];\n    const index = MiniMax(newBoard, player, cpu);\n\n    newBoard[index] = cpu;\n\n    const winner = isWinner(newBoard);\n    if (!winner) {\n      draw = isDraw(newBoard);\n    }\n\n    this.setState({ board: newBoard, winner, draw });\n  };\n\n  handleClick = (index) => {\n    const { board, player } = this.state;\n    let draw = false;\n\n    const newBoard = [...board];\n\n    newBoard[index] = player;\n    const winner = isWinner(newBoard);\n\n    if (!winner) {\n      draw = isDraw(newBoard);\n    }\n    this.setState({ board: newBoard, winner, draw });\n\n    if (!winner || !draw) this.nextMove(newBoard);\n  };\n\n  handleSelectPlayer = (e) => {\n    e.preventDefault();\n    const player = e.currentTarget.player.value;\n    const cpu = player === \"X\" ? \"O\" : \"X\";\n    this.setState({ player, cpu });\n  };\n\n  handleRestart = () => {\n    const board = Array(9).fill(null);\n    const player = null;\n    const cpu = null;\n    const winner = null;\n    const draw = null;\n\n    this.setState({ board, player, cpu, winner, draw });\n  };\n\n  render() {\n    const { board, player, winner, draw } = this.state;\n    return (\n      <div className=\"container\">\n        <h1>Tic Tac Toe</h1>\n        <h5>Artifical Intelligence</h5>\n\n        <SelectPlayer\n          player={player}\n          winner={winner}\n          onHandleSelectPlayer={this.handleSelectPlayer}\n        />\n\n        <div className=\"board\">\n          <Box player={player} board={board} onHandleClick={this.handleClick} />\n        </div>\n\n        <Restart\n          winner={winner}\n          player={player}\n          draw={draw}\n          onHandleRestart={this.handleRestart}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}